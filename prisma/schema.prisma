generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       UserRole @default(CUSTOMER)
  contactNo  String
  address    String
  profileImg String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders           Order[]
  reviewAndRatings ReviewAndRating[]

  @@map("users")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

model Category {
  id    String @id @default(uuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]

  @@map("categories")
}

model Book {
  id              String @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  orderedBooks     OrderedBook[]
  reviewAndRatings ReviewAndRating[]

  @@map("books")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  userId String
  bookId String

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  @@map("reviews-and-ratings")
}

model Order {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  status OrderStatus @default(pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderedBooks OrderedBook[]

  @@map("orders")
}

enum OrderStatus {
  pending
  shipped
  delivered
}

model OrderedBook {
  id       String @id @default(uuid())
  orderId  String
  bookId   String
  quantity Int

  order Order @relation(fields: [orderId], references: [id])
  book  Book  @relation(fields: [bookId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ordered-books")
}
